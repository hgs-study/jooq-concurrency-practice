/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables.records;


import jooq.dsl.tables.Subscribe;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubscribeRecord extends UpdatableRecordImpl<SubscribeRecord> implements Record6<Long, String, String, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_test.subscribe.idx</code>.
     */
    public SubscribeRecord setIdx(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.subscribe.idx</code>.
     */
    public Long getIdx() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooq_test.subscribe.register</code>.
     */
    public SubscribeRecord setRegister(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.subscribe.register</code>.
     */
    public String getRegister() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq_test.subscribe.service</code>.
     */
    public SubscribeRecord setService(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.subscribe.service</code>.
     */
    public String getService() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq_test.subscribe.content_type</code>.
     */
    public SubscribeRecord setContentType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.subscribe.content_type</code>.
     */
    public String getContentType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooq_test.subscribe.content_idx</code>.
     */
    public SubscribeRecord setContentIdx(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.subscribe.content_idx</code>.
     */
    public Long getContentIdx() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>jooq_test.subscribe.hit</code>.
     */
    public SubscribeRecord setHit(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.subscribe.hit</code>.
     */
    public Long getHit() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, String, String, String, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, String, String, String, Long, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Subscribe.SUBSCRIBE.IDX;
    }

    @Override
    public Field<String> field2() {
        return Subscribe.SUBSCRIBE.REGISTER;
    }

    @Override
    public Field<String> field3() {
        return Subscribe.SUBSCRIBE.SERVICE;
    }

    @Override
    public Field<String> field4() {
        return Subscribe.SUBSCRIBE.CONTENT_TYPE;
    }

    @Override
    public Field<Long> field5() {
        return Subscribe.SUBSCRIBE.CONTENT_IDX;
    }

    @Override
    public Field<Long> field6() {
        return Subscribe.SUBSCRIBE.HIT;
    }

    @Override
    public Long component1() {
        return getIdx();
    }

    @Override
    public String component2() {
        return getRegister();
    }

    @Override
    public String component3() {
        return getService();
    }

    @Override
    public String component4() {
        return getContentType();
    }

    @Override
    public Long component5() {
        return getContentIdx();
    }

    @Override
    public Long component6() {
        return getHit();
    }

    @Override
    public Long value1() {
        return getIdx();
    }

    @Override
    public String value2() {
        return getRegister();
    }

    @Override
    public String value3() {
        return getService();
    }

    @Override
    public String value4() {
        return getContentType();
    }

    @Override
    public Long value5() {
        return getContentIdx();
    }

    @Override
    public Long value6() {
        return getHit();
    }

    @Override
    public SubscribeRecord value1(Long value) {
        setIdx(value);
        return this;
    }

    @Override
    public SubscribeRecord value2(String value) {
        setRegister(value);
        return this;
    }

    @Override
    public SubscribeRecord value3(String value) {
        setService(value);
        return this;
    }

    @Override
    public SubscribeRecord value4(String value) {
        setContentType(value);
        return this;
    }

    @Override
    public SubscribeRecord value5(Long value) {
        setContentIdx(value);
        return this;
    }

    @Override
    public SubscribeRecord value6(Long value) {
        setHit(value);
        return this;
    }

    @Override
    public SubscribeRecord values(Long value1, String value2, String value3, String value4, Long value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubscribeRecord
     */
    public SubscribeRecord() {
        super(Subscribe.SUBSCRIBE);
    }

    /**
     * Create a detached, initialised SubscribeRecord
     */
    public SubscribeRecord(Long idx, String register, String service, String contentType, Long contentIdx, Long hit) {
        super(Subscribe.SUBSCRIBE);

        setIdx(idx);
        setRegister(register);
        setService(service);
        setContentType(contentType);
        setContentIdx(contentIdx);
        setHit(hit);
    }
}
