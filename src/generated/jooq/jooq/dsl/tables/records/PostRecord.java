/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables.records;


import jooq.dsl.tables.Post;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PostRecord extends UpdatableRecordImpl<PostRecord> implements Record5<Long, String, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq_test.post.id</code>.
     */
    public PostRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.post.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooq_test.post.title</code>.
     */
    public PostRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.post.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq_test.post.content</code>.
     */
    public PostRecord setContent(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.post.content</code>.
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq_test.post.hit</code>.
     */
    public PostRecord setHit(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.post.hit</code>.
     */
    public Long getHit() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>jooq_test.post.version</code>.
     */
    public PostRecord setVersion(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jooq_test.post.version</code>.
     */
    public Long getVersion() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Post.POST.ID;
    }

    @Override
    public Field<String> field2() {
        return Post.POST.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Post.POST.CONTENT;
    }

    @Override
    public Field<Long> field4() {
        return Post.POST.HIT;
    }

    @Override
    public Field<Long> field5() {
        return Post.POST.VERSION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public Long component4() {
        return getHit();
    }

    @Override
    public Long component5() {
        return getVersion();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public Long value4() {
        return getHit();
    }

    @Override
    public Long value5() {
        return getVersion();
    }

    @Override
    public PostRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PostRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public PostRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public PostRecord value4(Long value) {
        setHit(value);
        return this;
    }

    @Override
    public PostRecord value5(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public PostRecord values(Long value1, String value2, String value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PostRecord
     */
    public PostRecord() {
        super(Post.POST);
    }

    /**
     * Create a detached, initialised PostRecord
     */
    public PostRecord(Long id, String title, String content, Long hit, Long version) {
        super(Post.POST);

        setId(id);
        setTitle(title);
        setContent(content);
        setHit(hit);
        setVersion(version);
    }
}
